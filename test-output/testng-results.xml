<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="2" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-20T18:56:23 IST" name="Suite" finished-at="2025-01-20T18:56:46 IST" duration-ms="23288">
    <groups>
    </groups>
    <test started-at="2025-01-20T18:56:23 IST" name="Test" finished-at="2025-01-20T18:56:46 IST" duration-ms="23288">
      <class name="com.mk.tests.LoginTest">
        <test-method is-config="true" signature="setup([Ljava.lang.Object;)[pri:0, instance:com.mk.tests.LoginTest@466276d8]" started-at="2025-01-20T18:56:25 IST" name="setup" finished-at="2025-01-20T18:56:36 IST" duration-ms="11598" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@62e93c3a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup([Ljava.lang.Object;)[pri:0, instance:com.mk.tests.LoginTest@466276d8]" started-at="2025-01-20T18:56:25 IST" name="setup" finished-at="2025-01-20T18:56:28 IST" duration-ms="3015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@673919a7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup([Ljava.lang.Object;)[pri:0, instance:com.mk.tests.LoginTest@466276d8]" started-at="2025-01-20T18:56:25 IST" name="setup" finished-at="2025-01-20T18:56:44 IST" duration-ms="19382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@25d93198]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup([Ljava.lang.Object;)[pri:0, instance:com.mk.tests.LoginTest@466276d8]" started-at="2025-01-20T18:56:25 IST" name="setup" finished-at="2025-01-20T18:56:35 IST" duration-ms="10596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2436ea2f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.util.Map)[pri:0, instance:com.mk.tests.LoginTest@466276d8]" started-at="2025-01-20T18:56:28 IST" name="loginTest" data-provider="getData" finished-at="2025-01-20T18:56:29 IST" duration-ms="1510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=secret_sauce, browser=chrome, count=1, testDescription=To check whether the user can successfully login, priority=1, execute=yes, testName=loginTest, username=problem_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="flush()[pri:0, instance:com.mk.tests.LoginTest@466276d8]" started-at="2025-01-20T18:56:29 IST" name="flush" finished-at="2025-01-20T18:56:29 IST" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method signature="loginTest(java.util.Map)[pri:0, instance:com.mk.tests.LoginTest@466276d8]" started-at="2025-01-20T18:56:35 IST" name="loginTest" data-provider="getData" finished-at="2025-01-20T18:56:37 IST" duration-ms="1536" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=secret_sauce, browser=firefox, count=2, testDescription=To check whether the user can successfully login, priority=1, execute=yes, testName=loginTest, username=locked_out_user}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expecting actual:
  "https://www.saucedemo.com/"
to contain:
  "inventory" ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expecting actual:
  "https://www.saucedemo.com/"
to contain:
  "inventory" 
at com.mk.tests.LoginTest.loginTest(LoginTest.java:21)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:81)
at org.testng.internal.thread.Async$AsyncTask.run(Async.java:34)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1575)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.util.Map)[pri:0, instance:com.mk.tests.LoginTest@466276d8]" started-at="2025-01-20T18:56:36 IST" name="loginTest" data-provider="getData" finished-at="2025-01-20T18:56:37 IST" duration-ms="1219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=secret_sauce, browser=chrome, count=1, testDescription=To check whether the user can successfully login, priority=1, execute=yes, testName=loginTest, username=standard_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="flush()[pri:0, instance:com.mk.tests.LoginTest@466276d8]" started-at="2025-01-20T18:56:37 IST" name="flush" finished-at="2025-01-20T18:56:38 IST" duration-ms="1234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method is-config="true" signature="flush()[pri:0, instance:com.mk.tests.LoginTest@466276d8]" started-at="2025-01-20T18:56:37 IST" name="flush" finished-at="2025-01-20T18:56:38 IST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method signature="loginTest(java.util.Map)[pri:0, instance:com.mk.tests.LoginTest@466276d8]" started-at="2025-01-20T18:56:44 IST" name="loginTest" data-provider="getData" finished-at="2025-01-20T18:56:45 IST" duration-ms="602" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=secret_sauce, browser=firefox, count=2, testDescription=To check whether the user can successfully login, priority=1, execute=yes, testName=loginTest, username=locked_out_user}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expecting actual:
  "https://www.saucedemo.com/"
to contain:
  "inventory" ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expecting actual:
  "https://www.saucedemo.com/"
to contain:
  "inventory" 
at com.mk.tests.LoginTest.loginTest(LoginTest.java:21)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:81)
at org.testng.internal.thread.Async$AsyncTask.run(Async.java:34)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1575)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="flush()[pri:0, instance:com.mk.tests.LoginTest@466276d8]" started-at="2025-01-20T18:56:45 IST" name="flush" finished-at="2025-01-20T18:56:46 IST" duration-ms="1415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
      </class> <!-- com.mk.tests.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
